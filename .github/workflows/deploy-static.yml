name: Deploy to S3 and CloudFront

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js (for asset builds, if needed)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Print AWS CLI version
        run: aws --version

      - name: Sync web/ to S3
        run: |
          # Sync HTML files with no-cache headers
          aws s3 sync web/ s3://$S3_BUCKET --delete \
            --exclude "*" \
            --include "*.html" \
            --cache-control "no-cache, no-store, must-revalidate" \
            --metadata-directive REPLACE
          
          # Sync JS/CSS files with short cache (5 minutes)
          aws s3 sync web/ s3://$S3_BUCKET \
            --exclude "*.html" \
            --include "*.js" --include "*.css" \
            --cache-control "max-age=300, must-revalidate" \
            --metadata-directive REPLACE
          
          # Sync other assets with standard cache (1 hour)
          aws s3 sync web/ s3://$S3_BUCKET \
            --exclude "*.html" --exclude "*.js" --exclude "*.css" \
            --cache-control "max-age=3600" \
            --metadata-directive REPLACE
        env:
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: Invalidate CloudFront cache
        run: |
          # Create more aggressive invalidation
          aws cloudfront create-invalidation \
            --distribution-id $CLOUDFRONT_DISTRIBUTION_ID \
            --paths '/*' '/index.html' '/app.js' '/*.js' '/*.css'
        env:
          CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}

      - name: Done
        run: echo "Deploy complete!" 